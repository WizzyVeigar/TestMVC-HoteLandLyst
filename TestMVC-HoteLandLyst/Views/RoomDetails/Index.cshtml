@model TestMVC_HoteLandLyst.Models.BookingModel;
@{
    ViewData["Title"] = "Room" + Model.Room.RoomNumber + "Details";
}

<h1> Welcome to room @{Html.DisplayFor(model => model.Room.RoomNumber);}!</h1>
@*<h4>This room costs @Model.Room.ToString() kr. daily</h4>*@
@*<label>This room costs @Html.LabelForModel(Model.Room.ToString(), new { id = "RoomPrice" }) kr. daily</label>*@

@*@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker", id = "datepicker" } })*@

@using (Html.BeginForm("AddToBooking", "RoomDetails", FormMethod.Post, new { @class = "needs-validation" }))
{
    @Html.LabelFor(model => Model.ReservationPrice, Model.Room.ToString(), new { id = "RoomPrice" })
    @*<form class="needs-validation" novalidate>*@
    <div class="form-group">
        <div class="form-row">
            <div class="col">
                <label asp-for="StartDate" class="control-label"></label>
                <div class='input-group date' id='startdate' >
                    @*<input asp-for="StartDate" type="text" class="form-control" value="@DateTime.Now.ToString("dd-mm-yyyyThh:mm")" required />*@
                    <input id="datetimepickerstart" type="text" class="form-control" asp-for="StartDate" value="@DateTime.Now.ToString("dd-mm-yyyy hh:mm")" required/>

                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                <div class="invalid-feedback">
                    Please insert a valid date.
                </div>
            </div>
            <div class="col">
                <label asp-for="EndDate" class="control-label"></label>
                <div class='input-group date' id='enddate'>
                    @*<input asp-for="EndDate" type="text" class="form-control" " required />*@
                    <input id="datetimepickerend" type="text" class="form-control" asp-for="EndDate"  value="@DateTime.Now.AddMinutes(3).ToString("dd-mm-yyyy hh:mm")" required/>
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                <div class="invalid-feedback">
                    Please insert a valid date.
                </div>
            </div>
            @*<div class="col">*@
            @*@Html.EditorFor(model => model.StartDate, new
                {
                    htmlAttributes = new
                    {
                        @type = "text",
                        //@class = "form-control",
                        //min = DateTime.Now.ToUniversalTime().ToString().Replace("/",":"),
                        //max = "12-31-2030 14:00:00",
                        id = "startDatePicker",
                        required = "required"
                    }
                })
                     <div class="invalid-feedback">
                         Please insert a valid date.
                     </div>*@
            @*</div>*@
            @*<div class="col">
                     <label class="label col-form-label">End date:</label><br>
                     @Html.EditorFor(model => model.EndDate, new
                {
                    htmlAttributes = new
                    {
                        @type = "datetime-local",
                        @class = "form-control",
                        min = "01-01-2020 10:00:00",
                        max = "12-31-2030 14:00:00",
                        id = "endDate",
                        required = "required"
                    }
                })
                     <div class="invalid-feedback">
                         Please insert a valid date.
                     </div>
                 </div>*@
        </div>
    </div>
    <div class="form-group">
        <div class="form-row">
            <div class="col">
                <button class="btn btn-success btn-block" type="submit" id="submitButton" name="submitButton">Submit booking</button>
                @*@Html.ActionLink("Submit Button", "AddToBooking", "RoomDetails", new { BookingModel = Model }, new {@class= "btn btn-success btn-block", value="Submit Booking" })*@
            </div>
        </div>
    </div>
    @*</form>*@
}

@section Scripts
    {
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="~/js/build/jquery.datetimepicker.full.js"></script>
    <link href="~/css/jquery.datetimepicker.css" rel="stylesheet" />

    <script>

        var ultraNumber = @Model.Room.RoomNumber;

        function GetUnavailableDates()
        {
            var url = window.location.origin + "/RoomDetails/GetUnavailableDates";

            $.get
                (
                url, { roomNumber: ultraNumber }, function (data)
                {
                        let strArra = new Array();
                    for (var i = 0; i < data.length; i++) {

                        var d = new Date(data[i]);
                        var month = '' + (d.getMonth() + 1);
                        var day = '' + d.getDate();
                        var year = '' + d.getFullYear();

                        if (month.length < 2)
                            month = '0' + month;
                        if (day.length < 2)
                            day = '0' + day;

                        strArra.push([year, month, day].join('-').toString());
                    }
                    $('#datetimepickerstart').datetimepicker({
                        disabledDates: strArra,
                        formatDate: 'Y-m-d'
                    });
                    $('#datetimepickerend').datetimepicker({
                        disabledDates: strArra,
                        onChangeDateTime: logic,
                        formatDate: 'Y-m-d'
                    });
                }
            )
        }

        GetUnavailableDates();

        var runOnce = false;
        var logic = function CheckGreaterEndDate(endDateTime) {

            let startDate = document.getElementById("datetimepickerstart").value;

            if ((Date.parse(endDateTime) <= Date.parse(startDate)) && runOnce === true) {
                alert("End date should be greater than Start date");
                $('#datetimepickerend').datetimepicker('reset');
            }

            //Check so the method doesn't alert on load
            if (runOnce === false) {
                runOnce = true;
            }
        };

    </script>
    <script type="text/javascript" src="~/js/Dates.js"></script>

    @*<script src="~/js/jquery-ui-timepicker-addon.js"></script>
        <link href="~/css/jquery-ui-timepicker-addon.css" rel="stylesheet" />*@

    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.1/moment.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.7.14/js/bootstrap-datetimepicker.min.js"></script>*@

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
    @*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.7.14/css/bootstrap-datetimepicker.min.css">*@
}