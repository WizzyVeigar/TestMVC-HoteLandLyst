HotelLandLyst SQL 


use HotelLandLyst;

drop table if exists Reservation, FinishedReservationLog, Customer, City, RoomAccessoryList, Room, RoomStatus, RoomAccessory

create table RoomAccessory(
RaId int primary key identity(1,1),
AccName varchar(200) not null,
ExtraCharge decimal(18,2) not null
);

create table RoomStatus(
RoomStatusValue varchar(50) primary key
);

create table Room(
RoomNumber int primary key identity(100,1),
DayPrice decimal(18,2) not null,
RoomStatusValue varchar(50),
foreign key(RoomStatusValue) references RoomStatus(RoomStatusValue)
);

create table RoomAccessoryList(
RoomNumber int not null,
RAId int not null,
foreign key(RoomNumber) references Room(RoomNumber),
foreign key(RAId) references RoomAccessory(RAId),
primary key(RoomNumber, RAId)
);

create table City(
CityAreaCode int primary key,
AreaName varchar(200)
);

create table Customer(
customerPhone varchar(20) primary key,
customerFName varchar(100) not null,
customerLName varchar(100) not null,
customerAddress varchar(500),
CityAreaCode int not null,
customerEmail varchar(200) not null
foreign key(CityAreaCode) references City(CityAreaCode)
);

create table Reservation(
ReservationId int primary key identity(1000,1),
RoomNumber int not null,
customerPhone varchar(20) not null,
ReservationPrice decimal(18,2) not null,
StartDate DateTime not null,
EndDate DateTime not null,
foreign key(RoomNumber) references Room(RoomNumber),
foreign key(customerPhone) references Customer(customerPhone)
);

create table FinishedReservationLog(
DeletionDate DateTime not null,
RoomNumber int not null,
customerPhone varchar(20) not null,
ReservationPrice decimal(18,2) not null,
StartDate DateTime not null,
EndDate DateTime not null,
foreign key(RoomNumber) references Room(RoomNumber),
foreign key(customerPhone) references Customer(customerPhone)
)



create procedure GetRoomById @id int
as

select * 
from Room
where RoomNumber = @id


declare @startDate smalldatetime = Cast('2020-12-29 09:20:00' as smalldatetime)
declare @endDate smalldatetime = Cast('2020-12-31 09:20:00' as smalldatetime)

exec MakeReservation 101, '28199319', @startDate, @endDate


create procedure MakeReservation
@RoomNumber int, @customerPhone varchar(20), @StartDate DateTime, 
@EndDate DateTime
as

declare @dayAmount int = (Select DATEDIFF(day, @StartDate, @EndDate));
declare @TotalAmount int;

exec @TotalAmount = GetRoomTotalPrice @RoomNumber;

insert into Reservation(customerPhone, RoomNumber, StartDate, EndDate, ReservationPrice)
values(
	@customerPhone,
	@RoomNumber, 
	@StartDate,
	@EndDate, 
	case when @dayAmount >= 7 then @TotalAmount * 0.9
	else @TotalAmount
	end	
);

create procedure GetRoomTotalPrice 
	@RoomId int
	AS
	begin
		declare @TotalPrice int
		select @TotalPrice = Sum(DayPrice) + Sum(ExtraCharge)
		from Room
		inner join RoomAccessoryList
		on RoomAccessoryList.RoomNumber = Room.RoomNumber
		inner join RoomAccessory
		on RoomAccessory.RaId = RoomAccessoryList.RAId
		where Room.RoomNumber = @RoomId
		return @TotalPrice
	end


create procedure MakeCustomer @customerFName varchar(100), @customerLName varchar(100), 
@customerAddress varchar(500), @customerPhone varchar(20), 
@customerEmail varchar(200), @customerAreaCode int

AS

insert into Customer(customerFName, customerLName, customerAddress, CityAreaCode, customerEmail, customerPhone)
values
(@customerFName, @customerLName, @customerAddress, @customerAreaCode, @customerEmail, @customerPhone)


create procedure GetRoomAccessories 
as

select Room.RoomNumber, AccName, ExtraCharge
from Room
left join RoomAccessoryList on RoomAccessoryList.RoomNumber = Room.RoomNumber
left join RoomAccessory on RoomAccessory.RaId = RoomAccessoryList.RAId


create procedure GetCustomer @customerPhone varchar(20)
as
select * FROM Customer WHERE customerPhone=@customerPhone

create procedure GetAllRooms
as
select * from Room


Create procedure GetRoomAccessoriesById @Id int
as
select RoomAccessory.AccName, RoomAccessory.ExtraCharge
from RoomAccessory
inner join RoomAccessoryList
on 
RoomAccessory.RaId = RoomAccessoryList.RAId
inner join Room
on Room.RoomNumber = RoomAccessoryList.RoomNumber
where Room.RoomNumber = @Id;